import {Component, EventEmitter, Output, Input} from '@angular/core';
import {Field} from "../../../entities/field";

@Component({
  selector: 'app-field',
  templateUrl: './field.component.html',
  styleUrls: ['./field.component.css']
})
export class FieldComponent{
  text: string

  @Input() id: string|undefined
  @Input() field: Field|undefined

  //–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–º–µ—á–µ–Ω—ã—Ö –º–∏–Ω
  @Output() mineMarked = new EventEmitter();
  //–∏–≥—Ä–æ–∫ –≤–∑–æ—Ä–≤–∞–ª –º–∏–Ω—É
  @Output() mineExploded = new EventEmitter();
  //–æ—Ç–∫—Ä—ã—Ç—å –ø–æ–ª–µ –∏ –≤—ã–∑–≤–∞—Ç—å –≤ —Ä–æ–¥–∏—Ç–µ–ª–µ –∫–∞—Å–∫–∞–¥ –µ—Å–ª–∏ –º–∏–Ω —Ä—è–¥–æ–º –Ω–µ—Ç
  @Output() fieldOpened = new EventEmitter();

  constructor() {
    this.text = ""
  }

  leftClick(){
    if (!this.field?.isMarked) {
      if (this.field?.isMined) {
        this.text = "üí£"
        this.mineExploded.emit(true)
      } else if (this.field?.minesAround === 0) {
        this.fieldOpened.emit({
          i: this.field?.i,
          j: this.field?.j
        })
      } else {
        this.text = ""+this.field?.minesAround
        this.fieldOpened.emit()
      }
      // @ts-ignore
      this.field?.isLeftClicked = true
    }
  }

  rightClick(){
    if (this.field?.isMarked) {
      this.text = ""
      this.mineMarked.emit(false)
    } else {
      this.text = "üö©"
      this.mineMarked.emit(true)
    }
    // @ts-ignore
    this.field?.isMarked = !this.field?.isMarked
  }
}
